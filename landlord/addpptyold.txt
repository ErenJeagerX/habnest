<?php
header('Content-Type: application/json');
session_start();

$landlordId = $_SESSION['id'];
if (!$landlordId) { 
    echo json_encode(['success' => false, 'error' => 'Unauthorized']);
    exit;
}

// --- CONFIG ---
$uploadDir = __DIR__ . '/../uploads/properties/';
$allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
$presetLat = "10.33";
$presetLng = "37.72";

// --- VALIDATION ---
$title = trim($_POST['title'] ?? '');
$description = trim($_POST['description'] ?? '');
$price = $_POST['price'] ?? '';
$bedrooms = $_POST['bedrooms'] ?? '';
$lat = $_POST['lat'] ?? '';
$lng = $_POST['lng'] ?? '';
$error = '';

// Basic validation (bedrooms: only check empty or 'select'))
if (
    $title === '' || strlen($title) < 10
) $error = "Title must be at least 10 characters.";
elseif (
    $description === '' || strlen($description) < 20
) $error = "Description must be at least 20 characters.";
elseif (
    $price === '' || !is_numeric($price) || $price < 1
) $error = "Price must be a positive number.";
elseif (
    $bedrooms === '' || strtolower($bedrooms) === 'select'
) $error = "Please select a number of bedrooms.";
elseif (
    $lat === '' || $lng === '' || ($lat == $presetLat && $lng == $presetLng)
) $error = "Please select a valid location.";
elseif (
    !isset($_FILES['files']) || count($_FILES['files']['name']) !== 3
) $error = "Please upload exactly 3 images.";

// File type validation
if (!$error) {
    foreach ($_FILES['files']['type'] as $type) {
        if (!in_array($type, $allowedTypes)) {
            $error = "All files must be valid images (jpg, png, gif, webp).";
            break;
        }
    }
}

// --- FILE UPLOAD ---
$savedFiles = [];
if (!$error) {
    if (!is_dir($uploadDir)) mkdir($uploadDir, 0777, true);

   foreach ($_FILES['files']['tmp_name'] as $idx => $tmpName) {
       $originalName = $_FILES['files']['name'][$idx];
       $ext = pathinfo($originalName, PATHINFO_EXTENSION);
       $uniqueName = uniqid('img_', true) . '.' . $ext;
       // Ensure correct path concatenation and use of DIRECTORY_SEPARATOR
       $relativePath = 'uploads/properties/' . $uniqueName;
       $targetPath = $uploadDir . $uniqueName; 

       if (move_uploaded_file($tmpName, $targetPath)) {
           $savedFiles[] = $relativePath;
       } else {
           $error = "Failed to upload image: $originalName";
           break;
       }
   }

   if (!$error && count($savedFiles) !== 3) {
       $error = "Failed to save all images.";
   }
}

// --- DB INSERT ---
if (!$error) {
    require_once '../includes/db.php'; // adjust path as needed

    $coverIndex = isset($_POST['cover_index']) ? intval($_POST['cover_index']) : 0;
    $coverUnique = $savedFiles[$coverIndex] ?? '';
    if ($coverUnique === '') { // Corrected conditional statement
        echo json_encode([
            'success' => false,
            'error' => 'Cover image could not be determined.'
        ]);
        exit;
    }

    // Debugging: Output saved files and cover index
    error_log("Saved files: " . print_r($savedFiles, true));
    error_log("Cover index: " . $coverIndex);
    error_log("Cover image path: " . $coverUnique);
    foreach ($savedFiles as $index => $file) {
       error_log("Image $index path: " . $file);
    }

    // Cast to correct types for DB
    $price = floatval($price);
    $lat = floatval($lat);
    $lng = floatval($lng);

    // Insert property with cover image
    $stmt = $conn->prepare("INSERT INTO properties (title, description, price, bedrooms, latitude, longitude, property_image, landlord_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
    $stmt->bind_param("ssdddsis", $title, $description, $price, $bedrooms, $lat, $lng, $coverUnique, $landlordId);
    if (!$stmt->execute()) {
       error_log("Database error inserting property: " . $stmt->error);
        $error = "Database error: could not insert property.";
    } else {
        $propertyId = $conn->insert_id;

        // Insert other images into property_imgs table
       $imgStmt = $conn->prepare("INSERT INTO property_imgs (property_id, img_name) VALUES (?, ?)");
       foreach ($savedFiles as $index => $relativePath) {
           // Skip the cover image
           if ($index == $coverIndex) {
               continue;
           }
           $imgStmt->bind_param("is", $propertyId, $relativePath);
           error_log("Inserting image: " . $relativePath . " for property ID: " . $propertyId);
           if (!$imgStmt->execute()) {
               $error = "Database error: could not insert images.";
               break;
           }
       }
    }
}

// --- RESPONSE ---
echo json_encode([
    'success' => $error === '',
    'error' => $error
]);